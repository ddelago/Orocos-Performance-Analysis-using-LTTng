Work Notes:

Week of March 6th
03/06/2017
- LTTng function tool DOES work on Orocos component and records the entrance and exits of hooks. But 
  only records functions addresses. 
- I need to find the object file for the orocos component so I can use addr2line without having to
  manually print the function addresses in the Orocos component and comparing them to the babeltrace. 

03/07/2017
- Try creating events for specific functions so that it shows up in Trace Compass
- Need more Orocos specific data
- Try compiling using -g -finstrument-functions
- http://archive.eclipse.org/tracecompass/doc/stable/org.eclipse.tracecompass.doc.user/
  LTTng-UST-Analyses.html
- Now that I can trace methods in Orocos using LTTng, I'm trying to visualize that data using an  
  Eclipse plugin that specifically uses LTTng traces 
- Need -g for 2.8+ for debug. FIGURE OUT HOW TO COMPILE WITH MULTIPLE FLAGS. Trace compass uses this 
  along with addr2line tool for function resolving.

03/08/2017
- Function names are still not resolving in Trace Compass when using traces from Orocos Components.
- Try to get LTTng branch working to get better trace data.
- Also try compiling Orocos components with -g debug flag. 
- Shared object libraries might have something to do with it. Also keep following Trace Compass
  guide to try and get function names to resolve.

03/09/2017
- Today I'm going to try and get the Orocos LTTng branch working. Now that I can visualize data 
  using Trace Compass, I just need better data to give it. 
- Internet is also back on today and will possibly be moving back to B9. Will have to reconfigure 
  everything on a new machine. 
- You can make recipes in a make file. Look at test_traces for an example of make files and creating 
  an Orocos component.
- Try this deployer-gnulinux -l Debug -s deployment.xml on regular component.
- Compiling using OROCOS_PREFIX=~/Work/rtt-lttng/rtt/os/gnulinux/traces/build as the Orocos prefix 
  seems to point to the correct location but I get the error symbol lookup error: /home/daniel/Work/rtt-lttng/rtt/os/gnulinux/traces/build/liborocos-rtt-traces-gnulinux.so: undefined symbol: lttng_probe_register
. Check using nm ~~~.so
- CHECK that rtt-lttng directoy is compiled correcty. Same error I had before.
- Look here https://lists.lttng.org/pipermail/lttng-dev/2014-March/022571.html
- Its something to do with lttng, can't find path?

Week of March 13th
03/13/2017
- Will try recompiling LTTng and Orocos and see if anyhing happens.
- Orocos OCL is ot needed because it is now part of Orocos Toolchain
- Look into this:
  - Lttng_ust_INCLUDE_DIRS and Lttng_ust_LIBRARIES (in advanced) are set.

03/16/2017
- Component can correctly locate LTTng .so files. Was pointing to wrong file.
- Am now having problems with components locating Orocos libraries. Need to fix paths.
- Might be using ROS Orocos Paths
- Make file was pointing to wrong .so file. 
- Recompiled rtt-lttng, I changed cmakelists in traces to where OROCOS_TARGET was gnulinux
- Back to where i started with symbol errors...
- Add symbol to LD Library path? This is the path to search for .so files

See Work bookmarks

symbol lookup error: /path/to/liborocos-rtt-traces-gnulinux.so: undefined symbol: lttng_probe_register

Week of March 20th
03/20/2017
- Posted problem on Stack Overflow, no response yet.
- I can locate the shared library, but can not locate the SYMBOL lttng_probe_register
- lttng-probe-register is part of lttng_modules package. Can not find package?
- Component is using ROS Orocos path
- Maybe try unsintalling all Orocos and reintsalling only rtt-lttng?
- U on nm means undefined, try recompliling rtt-lttng with paths to lttng_modules?
- Try setting Lttng_ust_INCLUDE_DIRS and Lttng_ust_LIBRARIES in CMAKE_LISTS
- FINALLY WORKS, NO MORE UNRESOLVED SYMBOLS!!! 
- Had to alter CMakeLists

03/21/2017
- City View Presentations
- Lockheed Martin Email

03/22/2017
- Since I also recieved the Component package erros on lttng_test, It's something to do with the rtt-lttng build.
- Error occurs whenever I try to import a component directory.
- Its something to do with my installation of Orocos since LD_Preload=cyg_profile also fails now.
- Was just a mispelled directory path
- Trace data I get from Paul is shit. COMBINE iwith cyg_profile. This does in fact work.
- Look into what specifically rtt-lttng traces.
- Something isn't working right with LD_PRELOAD. I don't think it's even working.
- Using without -gnu displays much more data. With -gnu only one cpu seems to be monitored and only processes with the name gnulinux.

03/23/2017
- More complex traces give better data.
- Compare new component's trace data output. Check if new Preload is actually doing anything.
- TRY THIS:
	https://wiki.ubuntu.com/Touch/LTTNG%20profiling#Build_the_instrumented_libraries
	http://archive.eclipse.org/tracecompass/doc/stable/org.eclipse.tracecompass.doc.user/LTTng-UST-Analyses.html
- Work with R2 Components. Keep trying to debug.

Week of March 27th:
03/27/2017
- Work on resolving function names. No more progress can be done on rtt-lttng (he ded)
- Test on r2_ws
- Maybe test on https://gitlab.com/nasa-jsc-robotics/robonaut2/wikis/R2%20Gazebo%20Simulation
- Test tracing on ROS nodes. Compile wih c flags possible?
  - http://answers.ros.org/question/152276/is-there-a-way-to-enable-c11-support-for-catkin-packages/
- Tracing works BEAUTIFULLY for ROS....
- Setting cmake flags in CMAKELIST does not work.

03/30/2017
- Next week move to 9 and set up environment.
- Work on fixing debugging problem with Orocos.

FIX THE OROCOS PROBLEM THIS WEEK
Week of April 3rd
04/03/2017
- Try setting debug var for components
- deployer-gnulinux -l Debug -s deployment.xml
- -l sets the log level     
- export ORO_LOGLEVEL=6
- Changing the log level does allow function tracing but names still do not resolve.
- This explains lttng with shared libraries:
	https://lists.lttng.org/pipermail/lttng-dev/2013-September/021340.html
	Google: lttng function names only address
- cyg_profile only records function address.
- PROBLEM IS DEBUGING WITH SHARED LIBRARIES, WORKS PERFECTLY FINE ON EXECUTABLES (ROS).
- LOOK INTO THIS:
	http://stackoverflow.com/questions/4514745/how-do-i-view-the-list-of-functions-a-linux-shared-library-is-exporting
	Google: nm on shared library
- I think its only possible by creating a mapping of the application.

04/04/2017
- Follow this exactly: http://archive.eclipse.org/tracecompass/doc/stable/org.eclipse.tracecompass.doc.user/LTTng-UST-Analyses.html#LTTng-UST_Analyses
- For mapping binary try this: http://archive.eclipse.org/tracecompass/doc/stable/org.eclipse.tracecompass.doc.user/LTTng-UST-Analyses.html#LTTng-UST_Analyses
- Google this for more: nm on shared library
DONE
FOLLOW THE SHELL SCRIPTS AND TRACECOMPASS DOCUMENTATION.